services:
     db:
          image: postgres:15
          container_name: fin_wss_db
          restart: always
          environment:
               POSTGRES_USER: ${POSTGRES_USER}
               POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
               POSTGRES_DB: ${POSTGRES_DB}
          ports:
               - "${POSTGRES_PORT:-5433}:5432"
          volumes:
               - postgres_data:/var/lib/postgresql/data

          # Add healthcheck to ensure the database is ready before the API starts
          healthcheck:
               test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
               interval: 10s
               timeout: 5s
               retries: 5

     api:
          build:
               context: .
               dockerfile: Dockerfile
          environment:
               PORT: ${PORT:-3000}
               DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
               GEMINI_API_KEY: ${GEMINI_API_KEY}
               POSTGRES_USER: ${POSTGRES_USER}
               POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
               POSTGRES_DB: ${POSTGRES_DB}
               POSTGRES_PORT: ${POSTGRES_PORT:-5432}
               DB_HOST: db

          command: >
               sh -c "
               pnpm exec prisma migrate deploy &&
               node dist/index.js
               "
          ports:
               - "${PORT:-3000}:3000"
          depends_on:
               db:
                    condition: service_healthy

volumes:
     postgres_data:
